#!/usr/bin/env ruby

self_load_path = File.expand_path("../lib", File.dirname(__FILE__))
unless $LOAD_PATH.include? self_load_path
  $LOAD_PATH << self_load_path
end

require 'marc'
require 'high_level_browse'
require 'tmpdir'


filename = ARGV[0]

reader = if filename =~ /xml\Z/i
           MARC::XMLReader.new(filename)
         else
           MARC::Reader.new(filename)
         end

Counter = Struct.new(:count, :invalid, :found, :notfound, :hlb) do

  def update(cn)
    self.count += 1
    case check_cn(cn)
    when :invalid
      self.invalid += 1
      0
    when :found
      self.found += 1
      1
    when :notfound
      self.notfound += 1
      0
    end
  end


  def check_cn(cn)
    normalized = HighLevelBrowse::CallNumberRange.callnumber_normalize(cn)
    return :invalid if normalized.nil?
    cats = hlb[cn]
    if cats.empty?
      :notfound
    else
      :found
    end
  end

  def puts_pretty_output
    puts '%9d total' % count
    puts '%9d not recognized as LC call numbers' % invalid
    puts '%9d with at least one HLB category' % found
    puts '%9d with NO category' % notfound
  end
end


def puts_output(f050, f852)
  puts "050 fields"
  f050.puts_pretty_output
  puts "\n852h fields"
  f852.puts_pretty_output
end

puts "Fetching/parsing HLB XML file"
filename = HighLevelBrowse::DB::FILENAME
dir      = Dir.tmpdir()
fullpath = File.join(dir, filename)

hlb = if File.exist?(fullpath)
        puts "Using file at #{fullpath}"
        HighLevelBrowse.load(dir: dir)
      else
        HighLevelBrowse.fetch_and_save(dir: dir)
      end

f050    = Counter.new(0, 0, 0, 0, hlb)
f852    = Counter.new(0, 0, 0, 0, hlb)
records = 0
matched_records = 0
possible_records = 0
puts "Beginning analysis of marc records with 2k record progress reports"
reader.each do |r|
  records += 1
  found = 0
  possible = false
  puts '%8d records processed so far' % records if records % 2_000 == 0
  if r['050']
    cns = r.fields('050').map { |x| x.map(&:value).join('') }
    cns.each do |cn|
      found += f050.update(cn)
      possible = true
    end
    cns = r.fields('852').keep_if { |x| x['h'] }.map { |x| x['h'] }
    cns.each do |cn|
      found += f852.update(cn)
      possible = true
    end
  end
  matched_records += 1 if found > 0
  possible_records += 1 if possible
end

puts "\n\n"
puts_output(f050, f852)
puts format(
       %Q[\nOf %d records,
  %d (%4.2f%%) had a field that often contains an LC Call Number
  %d (%4.2f%%) of *those* had at least one HLB category],
        records,
        possible_records,
        possible_records.to_f / records * 100,
        matched_records,
        matched_records.to_f / possible_records * 100)






